:root {
  --bg-color: #e8e8e8;
  --secondary-bg: rgb(29, 29, 29);
  --text-color: black;
  --text-color-2: white;
  --faded-black: rgb(65, 65, 65);
  --red-text: rgb(255, 0, 0, 1);
}

.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: var(--bg-color);
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--secondary-bg);
  border-radius: 10px;
  border: 2px solid transparent;
  background-clip: content-box;
  transition: all 0.3s ease-in-out;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: var(--faded-black);
}

body {
  background-color: var(--bg-color);
}

.main-container {
  background: var(--bg-color);
}

.box {
  background: var(--bg-color);
  box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
}

@media only screen and (max-width: 640px) {
  .box {
    width: 90vw;
  }
}

@media only screen and (max-width: 798px) {
  .box {
    width: 90vw;
  }
}

.inputGroup {
  font-family: "Segoe UI", sans-serif;
  margin: 1em 0 1em 0;
  position: relative;
}

.inputGroup input {
  font-size: 1rem;
  padding: 0.6em 0.8em;
  outline: none;
  border: 2px solid black;
  background-color: transparent;
  border-radius: 15px;
  width: 80%;
  transition: all 0.3s ease-in-out;
  color: var(--text-color);
}

.inputGroup input:hover {
  border-color: red;
}

.inputGroup label {
  font-size: 1.2rem;
  position: absolute;
  left: 0;
  padding: 8px;
  margin-left: 0.5em;
  pointer-events: none;
  transition: all 0.3s ease-in-out;
  color: var(--text-color);
}

.inputGroup :is(input:focus, input:valid) ~ label {
  transform: translateY(-50%) scale(0.9);
  margin: 0em;
  margin-left: 1.3em;
  padding: 0em 0.4em;
  background-color: var(--bg-color);
}

.inputGroup :is(input:focus, input:valid) {
  border-color: red;
}

.inputGroup button {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.4em 1.2em;
  border: 2px solid black;
  border-radius: 15px;
  color: black;
  z-index: 1;
  background: #e8e8e8;
  position: relative;
  font-weight: 800;
  font-size: 1.2rem;
  transition: all 0.3s ease-in-out;
  overflow: hidden;
  cursor: pointer;
}

.inputGroup button::before {
  content: "";
  position: absolute;
  top: -1px;
  left: 0;
  height: 105%;
  width: 0;
  border-radius: 15px;
  background-color: red;
  z-index: -1;
  box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27);
  transition: all 0.3s ease-in-out;
}

.inputGroup button:hover {
  color: var(--text-color-2);
  box-shadow: 0px 0px 15px 0px rgba(255, 255, 255, 0.27);
}

.inputGroup button:hover::before {
  width: 100%;
}

@media only screen and (max-width: 640px) {
  .inputGroup button {
    padding: 0em 1em;
  }
}

.first-cap::first-letter {
  text-transform: uppercase;
}

.ios-checkbox {
  --checkbox-size: 28px;
  --checkbox-color: #3b82f6;
  --checkbox-bg: #dbeafe;
  --checkbox-border: #93c5fd;

  position: relative;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.ios-checkbox input {
  display: none;
}

.checkbox-wrapper {
  position: relative;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: 8px;
  transition: transform 0.2s ease;
}

.checkbox-bg {
  position: absolute;
  inset: 0;
  border-radius: 8px;
  border: 2px solid var(--checkbox-border);
  background: white;
  transition: all 0.2s ease;
}

.checkbox-icon {
  position: absolute;
  inset: 0;
  margin: auto;
  width: 80%;
  height: 80%;
  color: white;
  transform: scale(0);
  transition: all 0.2s ease;
}

.check-path {
  stroke-dasharray: 40;
  stroke-dashoffset: 40;
  transition: stroke-dashoffset 0.3s ease 0.1s;
}

.ios-checkbox input:checked + .checkbox-wrapper .checkbox-bg {
  background: var(--checkbox-color);
  border-color: var(--checkbox-color);
}

.ios-checkbox input:checked + .checkbox-wrapper .checkbox-icon {
  transform: scale(1);
}

.ios-checkbox input:checked + .checkbox-wrapper .check-path {
  stroke-dashoffset: 0;
}

.ios-checkbox:hover .checkbox-wrapper {
  transform: scale(1.05);
}

.ios-checkbox:active .checkbox-wrapper {
  transform: scale(0.95);
}

.ios-checkbox input:focus + .checkbox-wrapper .checkbox-bg {
  box-shadow: 0 0 0 4px var(--checkbox-bg);
}

.ios-checkbox.red {
  --checkbox-color: #ef4444;
  --checkbox-bg: #fee2e2;
  --checkbox-border: #fca5a5;
}

@keyframes bounce {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.ios-checkbox input:checked + .checkbox-wrapper {
  animation: bounce 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.dg-box {
  width: max-content;
  height: fit-content;
  background: rgb(255, 255, 255);
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 30px;
  padding: 30px;
  box-shadow: 20px 20px 30px rgba(0, 0, 0, 0.068);
}
.dg-box-content {
  width: 100%;
  height: fit-content;
  display: flex;
  flex-direction: column;
  gap: 10px;
}
.dg-box-heading {
  font-size: 20px;
  font-weight: 700;
  color: rgb(27, 27, 27);
}
.dg-box-description {
  font-weight: 100;
  color: var(--faded-black);
}
.dg-box-button-wrapper {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}
.dg-box-button {
  width: 50%;
  height: 35px;
  border-radius: 10px;
  border: none;
  cursor: pointer;
  font-weight: 600;
}
.primary {
  background-color: rgb(255, 114, 109);
  color: white;
  transition: all 0.3s ease-in-out;
}
.primary:hover {
  background-color: rgb(255, 73, 66);
  transform: translateY(-7px);
}

.primary:active {
  transform: translateY(-1px);
}

.secondary {
  background-color: #ddd;
  transition: all 0.3s ease-in-out;
}
.secondary:hover {
  transform: translateY(-7px);
  background-color: rgb(197, 197, 197);
}

.secondary:active {
  transform: translateY(-1px);
}
